<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>rt on My Tech Blog</title><link>https://yairgd.github.io/tags/rt/</link><description>Recent content in rt on My Tech Blog</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Tue, 18 Feb 2020 00:00:00 +0000</lastBuildDate><atom:link href="https://yairgd.github.io/tags/rt/index.xml" rel="self" type="application/rss+xml"/><item><title>Linux core isolation to have a close RT performance.</title><link>https://yairgd.github.io/2020/02/linux-core-isolation-to-have-a-close-rt-performance./</link><pubDate>Tue, 18 Feb 2020 00:00:00 +0000</pubDate><guid>https://yairgd.github.io/2020/02/linux-core-isolation-to-have-a-close-rt-performance./</guid><description>Linux core isolation I have a real-time task that needed to run periodically at a constant rate at a constant time each time. Just running this task on a multithreaded environment can cause it to run in different timing values. A possible solution to this problem is to use Linux core isolation. In this case, we assign a specific core for the task, and the Linux kernel is getting out from the SMP balancing and hat core cand use for a specific task with minimal interrupts.</description></item></channel></rss>